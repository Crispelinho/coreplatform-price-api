name: üîÅ Backport on merge to main

on:
  pull_request:
    types: [closed]
    branches:
      - main
  push:
    branches:
      - hotfix/v1.0.2-add-backport-pipeline

jobs:
  backport:
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/hotfix/v1.0.2-add-backport-pipeline')

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Backport CLI
        run: npm install -g backport

      - name: Get list of release/* branches
        id: release_branches
        run: |
          RELEASE_BRANCHES=$(git ls-remote --heads origin 'refs/heads/release/*' | awk -F'/' '{print $NF}')
          echo "branches=develop $RELEASE_BRANCHES" >> "$GITHUB_OUTPUT"

      - name: Run Backport to develop and release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [ -z "$PR_NUMBER" ]; then
            echo "‚ùå No se detect√≥ PR_NUMBER, saliendo..."
            exit 1
          fi

          BRANCHES="${{ steps.release_branches.outputs.branches }}"
          echo "üìå Branches detectadas: $BRANCHES"

          for branch in $BRANCHES; do
            echo "‚û°Ô∏è Backporting PR #$PR_NUMBER to branch '$branch'..."

            OUTPUT=$(backport \
              --access-token "$GITHUB_TOKEN" \
              --repo-owner Crispelinho \
              --repo-name coreplatform-price-api \
              --pull-number "$PR_NUMBER" \
              --target-branch "$branch" \
              --interactive=false \
              --commit-conflicts=true \
              --assignee cristhian-carpio \
              --copySourcePRLabels \
              --copySourcePRReviewers \
              --pr-description "Backport autom√°tico del PR #$PR_NUMBER a '$branch'" \
              --backportBranchName "backport/pr-$PR_NUMBER-to-$branch" 2>&1)

            EXIT_CODE=$?

            echo "$OUTPUT"

            if [ $EXIT_CODE -ne 0 ]; then
              if echo "$OUTPUT" | grep -q "commit .* is empty"; then
                echo "‚ö†Ô∏è Commit ya est√° en '$branch', no se necesita backport."
              elif echo "$OUTPUT" | grep -q "Please fix the conflicts"; then
                echo "‚ö†Ô∏è Conflictos encontrados en '$branch'. Se cre√≥ PR para resolverlos manualmente."
              else
                echo "‚ùå Error desconocido durante el backport a '$branch'. Revisi√≥n necesaria."
              fi
            else
              echo "‚úÖ Backport a '$branch' realizado con √©xito."
            fi
          done
