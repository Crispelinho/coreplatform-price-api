name: üîÅ Backport on merge to main

on:
  push:
    branches: 
      - hotfix/v1.0.2-add-backport-pipeline
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  backport:
    if: |
      (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
      (github.event_name == 'push' && github.ref == 'refs/heads/hotfix/v1.0.2-add-backport-pipeline')
    
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Backport CLI
        run: npm install -g backport

      - name: Get list of release/* branches
        id: release_branches
        run: |
          RELEASE_BRANCHES=$(git ls-remote --heads origin 'refs/heads/release/*' | cut -d/ -f3-)
          echo "branches=$(echo $RELEASE_BRANCHES | tr '\n' ' ')" >> "$GITHUB_OUTPUT"

      - name: Run Backport to develop and release/*
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          if [ -z "$PR_NUMBER" ]; then
            PR_NUMBER=17
          fi

          RELEASE_BRANCHES=$(git ls-remote --heads origin 'refs/heads/release/*' | awk '{print $2}' | sed 's#refs/heads/##')
          if [ -z "$RELEASE_BRANCHES" ]; then
            echo "‚ö†Ô∏è No se encontraron ramas release/*. Solo se har√° backport a 'develop'."
          fi

          BRANCHES="develop ${{ steps.release_branches.outputs.branches }}"
          if [ -z "$BRANCHES" ]; then
            echo "‚ö†Ô∏è No se encontraron ramas destino para hacer backport. Abortando."
            exit 0
          fi

          for branch in $BRANCHES; do
            echo "‚û°Ô∏è Backporting PR #$PR_NUMBER to branch '$branch'..."

            # Ejecutar backport y capturar salida y c√≥digo de error
            OUTPUT=$(backport \
              --access-token "$GITHUB_TOKEN" \
              --repo-owner Crispelinho \
              --repo-name coreplatform-price-api \
              --pr "$PR_NUMBER" \
              --branch "$branch" \
              --commitConflicts true \
              --nonInteractive true \
              --assignee Crispelinho \
              --copySourcePRLabels true \
              --copySourcePRReviewers true \
              --prTitle "Backport PR #$PR_NUMBER to '$branch'" \
              --prDescription "Backport autom√°tico del PR #$PR_NUMBER a '$branch'" \
              --backportBranchName "backport/pr-$PR_NUMBER-to-$branch" 2>&1)

            sleep 5 # Esperar 5 segundos para evitar problemas de rate limit  

            EXIT_CODE=$?
            echo "$OUTPUT"

          if [ $EXIT_CODE -ne 0 ]; then
            # Manejo de errores conocidos
            if echo "$OUTPUT" | grep -q "is empty. Did you already backport this commit?"; then
              echo "‚ö†Ô∏è El commit ya est√° presente en '$branch'. No es necesario realizar backport."
            elif echo "$OUTPUT" | grep -q "Please fix the conflicts"; then
              echo "‚ö†Ô∏è Conflictos encontrados en '$branch'. Se cre√≥ PR para resolverlos manualmente."
            elif echo "$OUTPUT" | grep -q "The PR #$PR_NUMBER is not merged"; then
              echo "‚ö†Ô∏è El PR #$PR_NUMBER a√∫n no ha sido mergeado. No se puede hacer backport."
            elif echo "$OUTPUT" | grep -q "Cherrypick failed because commit .* was not found"; then
              echo "‚ö†Ô∏è No se encontr√≥ el commit original para hacer cherry-pick. Puede que el PR haya cambiado o el SHA no exista."
            else
              echo "‚ùå Error desconocido durante el backport a '$branch'. Revisi√≥n necesaria."
            fi  

            echo "üîç Se imprime log backport:"
            cat ~/.backport/backport.info.log || echo "‚ö†Ô∏è No se pudo leer el archivo de log"

          else
            # √âxito si contiene el link del PR
            if echo "$OUTPUT" | grep -q "View pull request: https://github.com/.*/pull/[0-9]\+"; then
              if echo "$OUTPUT" | grep -q "An unhandled error occurred while backporting commit"; then
                echo "‚ùå Ocurri√≥ un error no manejado durante el backport. Mostrando el log de backport:"
              else
                echo "‚úÖ Backport a '$branch' realizado con √©xito."
              fi
            else
              echo "‚ö†Ô∏è El comando termin√≥ sin error, pero no se encontr√≥ el enlace del PR. Revisi√≥n necesaria."
              echo "üîç Output:"
              echo "$OUTPUT"
              echo "üîç Se imprime log backport:"
              cat ~/.backport/backport.info.log || echo "‚ö†Ô∏è No se pudo leer el archivo de log"
            fi
          fi
          done