name: CD Pipeline

on:
  push:
    branches: [ feature/add-ci-cd-pipeline ]
    tags:
      - 'v*'  # Se ejecuta al crear un tag como v1.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Build project with Gradle
        run: ./gradlew clean build

      - name: Build Docker image
        run: docker build -t cristhiancarpio/price-service:${{ github.run_number }} .

      - name: Push Docker image
        run: docker push cristhiancarpio/price-service:${{ github.run_number }}

      - name: Pull and Run Latest Image
        run: |
          docker pull cristhiancarpio/price-service:${{ github.run_number }}
          docker run -d --name price-service -p 8080:8080 cristhiancarpio/price-service:${{ github.run_number }}

      - name: Test HTTP response
        run: |
            for i in {1..10}; do
              STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/actuator/health || echo "000")
              if [ "$STATUS" = "200" ]; then
                echo "Service is up!"
                break
              else
                echo "Waiting for service... status: $STATUS"
                sleep 2
              fi
            done

      - name: Wait for container to initialize
        run: sleep 10

      - name: Show container logs
        run: docker logs price-service